// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Test {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now())
}

model User {
  id                    Int                     @id @default(autoincrement())
  password              String
  email                 String                  @unique
  passwordAttempts      Int                     @default(3)
  isActive              Boolean                 @default(true)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  Member                Member[]
  Payment               Payment[]
  DepositPayment        DepositPayment[]
  LoanPayment           LoanPayment[]
  SharesPayment         SharesPayment[]
  MembershipApplication MembershipApplication[]
}

model MembershipApplication {
  id                 Int      @id @default(autoincrement())
  userId             Int
  user               User     @relation(fields: [userId], references: [id])
  status             Int      @db.SmallInt
  firstName          String   @db.VarChar(15)
  lastName           String   @db.VarChar(15)
  nationalIdNo       Int
  nationality        String
  dob                DateTime
  gender             String   @db.VarChar(1)
  maritalStatus      String
  phoneNo            String
  countryOfResidence String
  countyOfResidence  String
  estate             String
  houseNo            String
  employed           Boolean
  selfEmployer       Boolean
  employer           String
  dateOfEmployment   DateTime
  station            String
  jobTitle           String
  grossMonthlyIncome Int
  voided             Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Member {
  id                   Int                    @id @default(autoincrement())
  userId               Int
  user                 User                   @relation(fields: [id], references: [id])
  isActive             Boolean                @default(true)
  joinDate             DateTime               @default(now())
  exitDate             DateTime
  exitReason           String                 @db.VarChar(255)
  voided               Boolean                @default(false)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  MemberContactDetail  MemberContactDetail[]
  MemberPersonalDetail MemberPersonalDetail[]
  Deposit              Deposit[]
  Share                Share[]
  LoanApplication      LoanApplication[]
  Loan                 Loan[]
}

model MemberContactDetail {
  id                 Int      @id @default(autoincrement())
  member             Member   @relation(fields: [memberId], references: [id])
  memberId           Int
  phoneNo            String
  countryOfResidence String
  countyOfResidence  String
  estate             String
  houseNo            String
  voided             Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model MemberPersonalDetail {
  id            Int      @id @default(autoincrement())
  member        Member   @relation(fields: [memberId], references: [id])
  memberId      Int
  firstName     String   @db.VarChar(15)
  lastName      String   @db.VarChar(15)
  nationalIdNo  Int
  nationality   String
  dob           DateTime
  gender        String   @db.VarChar(1)
  maritalStatus String
  voided        Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Deposit {
  id        Int      @id @default(autoincrement())
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
  amount    Decimal  @db.Money
  datePaid  DateTime
  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Share {
  id        Int      @id @default(autoincrement())
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
  amount    Decimal  @db.Money
  datePaid  DateTime
  voided    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InterestType {
  id          Int           @id @default(autoincrement())
  name        String        @db.Char(20)
  description String        @db.Char(100)
  voided      Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  LoanProduct LoanProduct[]
}

model LoanProduct {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(20)
  interestType    InterestType      @relation(fields: [interestTypeId], references: [id])
  interestTypeId  Int
  minAmount       Int
  maxAmount       Int
  minTenor        Int
  maxTenor        Int
  interestRate    Decimal           @db.Decimal(4, 2)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  LoanApplication LoanApplication[]
  Loan            Loan[]
}

model LoanApplication {
  id            Int         @id @default(autoincrement())
  member        Member      @relation(fields: [memberId], references: [id])
  memberId      Int
  loanProduct   LoanProduct @relation(fields: [loanProductId], references: [id])
  loanProductId Int
  amount        Decimal     @db.Decimal(10, 2)
  tenorInMonths Int         @db.SmallInt
  status        Int         @db.SmallInt
  voided        Boolean     @default(false)
  voidReason    String      @db.VarChar(100)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Loan {
  id            Int         @id @default(autoincrement())
  member        Member      @relation(fields: [memberId], references: [id])
  memberId      Int
  loanProduct   LoanProduct @relation(fields: [loanProductId], references: [id])
  loanProductId Int
  amount        Decimal     @db.Decimal(10, 2)
  tenorInMonths Int         @db.SmallInt
  status        Int         @db.SmallInt
  voided        Boolean     @default(false)
  voidReason    String      @db.VarChar(100)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model PaymentMethod {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(20)
  description String
  voided      Boolean   @default(false)
  voidReason  String    @db.VarChar(100)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Payment     Payment[]
}

model Payment {
  id              Int              @id @default(autoincrement())
  amount          Decimal          @db.Decimal(10, 2)
  transactionCode String
  description     String
  paymentMethod   PaymentMethod    @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId Int
  memberUserId    Int
  user            User             @relation(fields: [memberUserId], references: [id])
  createdBy       Int
  voided          Boolean          @default(false)
  voidReason      String           @db.VarChar(100)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  DepositPayment  DepositPayment[]
  LoanPayment     LoanPayment[]
  SharesPayment   SharesPayment[]
}

model DepositPayment {
  id         Int      @id @default(autoincrement())
  amount     Decimal  @db.Decimal(10, 2)
  paymentId  Int
  payment    Payment  @relation(fields: [paymentId], references: [id])
  createdBy  Int
  user       User     @relation(fields: [createdBy], references: [id])
  voided     Boolean  @default(false)
  voidReason String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model LoanPayment {
  id         Int      @id @default(autoincrement())
  amount     Decimal  @db.Decimal(10, 2)
  paymentId  Int
  payment    Payment  @relation(fields: [paymentId], references: [id])
  createdBy  Int
  user       User     @relation(fields: [createdBy], references: [id])
  voided     Boolean  @default(false)
  voidReason String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model SharesPayment {
  id         Int      @id @default(autoincrement())
  amount     Decimal  @db.Decimal(10, 2)
  paymentId  Int
  payment    Payment  @relation(fields: [paymentId], references: [id])
  createdBy  Int
  user       User     @relation(fields: [createdBy], references: [id])
  voided     Boolean  @default(false)
  voidReason String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
